{"version":3,"sources":["assets/Script/CocosTools.ts","assets/Script/pages/DownloadImg.ts","assets/Script/Game.ts","assets/shader/Head_Circle.js","assets/Script/Helloworld.ts","assets/Script/common/LoadPrefab.ts","assets/Script/pages/QRCode.ts","assets/Script/pages/SingleCapture.ts","assets/Script/pages/Transition.ts"],"names":["exports","default","tackPhoto","node","fileName","pp","parent","op","position","runScene","cc","director","getScene","nn","Node","addChild","x","width","y","height","p","renderTexture","RenderTexture","create","Texture2D","PIXEL_FORMAT_RGBA8888","gl","DEPTH24_STENCIL8_OES","setVisible","_sgNode","begin","visit","end","saveToFile","IMAGE_FORMAT_JPG","active","setTimeout","jsb","fileUtils","getWritablePath","sys","os","OS_ANDROID","reflection","callStaticMethod","OS_IOS","destroy","saveNodeImg","callback","initWithSize","texture","camera","addComponent","Camera","targetTexture","canvasEl_1","document","createElement","ctx","getContext","render","data","readPixels","removeComponent","rowBytes","row","srow","imageData","createImageData","start","i","putImageData","base64","toDataURL","this","downloadImg","off","Director","EVENT_AFTER_DRAW","instantiate","_a","game","canvas","width_1","height_1","runScene_1","canvasNode_1","find","roomIndexs_1","canvasIndexs_1","children","map","roomNode","name","push","view","setCanvasSize","removeChild","on","bind","imgUrl","isBrowser","window","navigator","msSaveOrOpenBlob","arr","split","type","match","bstr","atob","n","length","u8arr","Uint8Array","blob","charCodeAt","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","aEl","evt","MouseEvent","bubbles","cancelable","download","target","href","body","appendChild","dispatchEvent","_decorator","ccclass","property","CocosTools_1","require","NewClass","_super","_this","apply","arguments","__extends","prototype","string","trim","alert","__decorate","Label","Component","menuContent","pageView","setContentHeight","totalHeight","content","scrollToPage","event","index","scrollPageCallBack","curPageIdx","_curPageIdx","getChildByName","color","Color","goback","loadScene","PageView","Class","extends","properties","_factor","factor","get","set","v","_radius","radius","material","Material","onLoad","sprite","getComponent","Sprite","setMaterial","update","frame","spriteFrame","getTexture","rect","getRect","_shaderTexture","equals","_shaderFrame","getMaterial","setProperty","uv_factor_1","uv_factor_2","Helloworld","label","openCocosTools","menu","ItemPrefab","prefab","parentNode","autoLoad","isPersist","addPersistRootNode","Prefab","tooltip","codeLabel","QRCodeNode","graphics","backColor","WHITE","foreColor","BLACK","margin","createQRCode","codeText","browserType","BROWSER_TYPE_IE","codeNode","getQRCodeBase64","url","div","QRCodeWeb","img","Promise","resolve","imgBase64","onload","src","initWithElement","handleLoadedTexture","SpriteFrame","saveQRCode","then","Graphics","Integer","savaNode","TransitionHandler","duration","positionX","positionY","Transition","nodes","onEnable","runAction","_loop_1","l","ve2","getPosition","actionTo","moveTo","widget","Widget","enabled","restoreFn","callFunc","sequence","onClickRun","forEach","item","Number","EditBox"],"mappings":"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","sourcesContent":["\r\nexport default {\r\n    /**\r\n     * @description Native保存节点为图片\r\n     * @param {cc.Node} node 保存的节点\r\n     * @param {String} fileName 保存的图片名称\r\n     */\r\n    tackPhoto: function (node, fileName) {\r\n        var pp = node.parent\r\n        var op = node.position\r\n        var runScene = cc.director.getScene()\r\n        var nn = new cc.Node()\r\n        runScene.addChild(nn)\r\n        nn.x = node.width / 2\r\n        nn.y = node.height / 2\r\n        node.parent = runScene\r\n        node.position = cc.p(node.width / 2, node.height / 2)\r\n        var renderTexture = cc.RenderTexture.create(node.width, node.height, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES)\r\n        renderTexture.setVisible(false);\r\n        nn._sgNode.addChild(renderTexture)\r\n        renderTexture.begin()\r\n        runScene._sgNode.visit()\r\n        renderTexture.end()\r\n        renderTexture.saveToFile(fileName, cc.IMAGE_FORMAT_JPG)\r\n        node.active = false\r\n        setTimeout(function () {\r\n            node.parent = pp\r\n            node.position = op\r\n            node.active = true\r\n            fileName = jsb.fileUtils.getWritablePath() + fileName\r\n            if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"photoTo\", \"(Ljava/lang/String;)V\", fileName)\r\n            } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n                jsb.reflection.callStaticMethod(\"AppController\", \"photoTo:\", fileName)\r\n            }\r\n        }, 10)\r\n        nn.destroy()\r\n    },\r\n    /**\r\n     * @description web浏览器单节点保存为图片\r\n     * @param {cc.Node} node 保存的节点\r\n     * @param {String} fileName 保存的图片名字\r\n     */\r\n    saveNodeImg(node: cc.Node, fileName: String) {\r\n        if (!(node instanceof cc.Node)) return\r\n        let callback = null\r\n\r\n        if (new cc.RenderTexture().initWithSize) {\r\n            // 2.x web截屏\r\n            let texture = new cc.RenderTexture()\r\n            texture.initWithSize(node.width, node.height)    \r\n    \r\n            const {width, height} = node\r\n            const camera =  node.addComponent(cc.Camera)\r\n            camera.targetTexture = texture\r\n            const canvasEl = document.createElement('canvas')\r\n            let ctx = canvasEl.getContext('2d')\r\n            canvasEl.width = width\r\n            canvasEl.height = height\r\n            camera.render(node)\r\n            let data = texture.readPixels()\r\n            node.removeComponent(camera)\r\n            let rowBytes = width * 4\r\n            for (let row = 0; row < height; row++) {\r\n                let srow = height - 1 - row\r\n                let imageData = ctx.createImageData(width, 1)\r\n                let start = srow * width * 4\r\n                for (let i = 0; i < rowBytes; i++) {\r\n                    imageData.data[i] = data[start+i]\r\n                }\r\n                ctx.putImageData(imageData, 0, row)\r\n            }\r\n            callback = function() {\r\n                const base64 = canvasEl.toDataURL()\r\n                this.downloadImg(base64, fileName)\r\n                cc.director.off(cc.Director.EVENT_AFTER_DRAW)\r\n            }\r\n        } else {\r\n            // 2.x 版本以下，只在1.9.3测试无问题\r\n            node = cc.instantiate(node)\r\n            let {width, height} = cc.game.canvas\r\n            const runScene = cc.director.getScene()\r\n            const canvasNode = cc.find('Canvas')\r\n            const roomIndexs = []\r\n            const canvasIndexs = []\r\n            runScene.children.map((roomNode, i) => {\r\n                if (roomNode.name !== 'Canvas' && roomNode.active) {\r\n                    roomNode.active = false\r\n                    roomIndexs.push(i)\r\n                }\r\n            })\r\n            canvasNode.children.map((node, i) => {\r\n                node.active && (node.active = false, canvasIndexs.push(i))\r\n            })\r\n            cc.view.setCanvasSize(node.width, node.height)\r\n            canvasNode.width = node.width\r\n            canvasNode.addChild(node)\r\n            callback = function() {\r\n                const base64 = cc.game.canvas.toDataURL()\r\n                this.downloadImg(base64, fileName)\r\n                cc.director.off(cc.Director.EVENT_AFTER_DRAW)\r\n                canvasNode.removeChild(node)\r\n                cc.view.setCanvasSize(width, height)\r\n                roomIndexs.map(i => { runScene.children[i].active = true })\r\n                canvasIndexs.map(i => { canvasNode.children[i].active = true })\r\n            }\r\n        }\r\n        \r\n        // 等渲染之后才能获取画布上的内容\r\n        cc.director.on(cc.Director.EVENT_AFTER_DRAW, callback.bind(this))\r\n    },\r\n    /**\r\n     * @description 浏览器下载图片，兼容ie\r\n     * @param {imgUrl|URL} imgUrl 图片的base64格式或图片Url\r\n     * @param {String} fileName 图片名称\r\n     */\r\n    downloadImg(imgUrl, fileName = 'QRcode.png') {\r\n        if (!cc.sys.isBrowser) return\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            // 支持msSaveOrOpenBlob方法（也就是使用IE浏览器的时候）\r\n            const arr = imgUrl.split(',')\r\n            const type = arr[0].match(/:(.*?);/)[1]\r\n            const bstr = atob(arr[1])\r\n            let n = bstr.length\r\n            const u8arr = new Uint8Array(n)\r\n            let blob\r\n            while (n--) u8arr[n] = bstr.charCodeAt(n)\r\n            try {\r\n                blob = new Blob([u8arr, {type}])\r\n            } catch (e) {\r\n                // 兼容旧版IE，如IE11\r\n                window.BlobBuilder = window.BlobBuilder ||\r\n                                     window.WebKitBlobBuilder ||\r\n                                     window.MozBlobBuilder ||\r\n                                     window.MSBlobBuilder;\r\n                if (window.BlobBuilder) {\r\n                    var bb = new BlobBuilder();\r\n                    bb.append(u8arr);\r\n                    blob = bb.getBlob(type);\r\n                }\r\n            }\r\n            window.navigator.msSaveOrOpenBlob(blob, fileName)\r\n        } else {\r\n            const aEl = document.createElement('a')\r\n            const evt = new MouseEvent('click', {\r\n                'view': window,\r\n                'bubbles': true,\r\n                'cancelable': true\r\n            });\r\n            aEl.download = fileName\r\n            aEl.target = '_blank' // safari浏览器在新标签页显示\r\n            aEl.href = imgUrl\r\n            document.body.appendChild(aEl)\r\n            aEl.dispatchEvent(evt) // 兼容火狐浏览器\r\n            document.body.removeChild(aEl)\r\n        }\r\n    },\r\n}","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nimport cocosTools from '../CocosTools'\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    imgUrl: cc.Label = null\r\n\r\n    // 下载图片\r\n    downloadImg() {\r\n        const imgUrl = this.imgUrl.string.trim()\r\n        if (!imgUrl) {\r\n            alert('莫得图片。晓得不。\\u263b')\r\n            return\r\n        }\r\n        cocosTools.downloadImg(imgUrl, 'img.png')\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    @property(cc.Node)\r\n    menuContent: cc.Node = null\r\n\r\n    @property(cc.PageView)\r\n    pageView: cc.PageView = null\r\n\r\n    start () {\r\n        this.setContentHeight()\r\n    }\r\n    // 设置内容的高度\r\n    setContentHeight() {\r\n        let totalHeight = 0\r\n        if (!this.pageView) return\r\n        this.pageView.content.children.map(node => {\r\n            totalHeight += node.height\r\n        })\r\n        this.pageView.content.height = totalHeight\r\n    }\r\n    // 滚动内容区到指定页\r\n    scrollToPage(event = null, index = 0) {\r\n        if(!this.pageView) return\r\n        this.pageView.scrollToPage(index, 0)\r\n        this.scrollPageCallBack(null, +index)\r\n    }\r\n    // 页面滚动回调\r\n    scrollPageCallBack(event, index = null) {\r\n        const content:cc.Node = this.menuContent\r\n        if (!content) return\r\n        const curPageIdx = event ? event._curPageIdx : index\r\n        const children: Array<cc.Node> = content.children\r\n        for (let i = 0; i < children.length; i++) {\r\n            const Background = children[i].getChildByName('Background');\r\n            Background.color = curPageIdx === i ? new cc.Color(190, 120, 255, 255) : new cc.Color(120, 250, 255, 255)\r\n        }\r\n    }\r\n    // 返回\r\n    goback() {\r\n        cc.director.loadScene('helloworld')\r\n    }\r\n}\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _factor: 4.0,\r\n        factor: {\r\n            get: function () {\r\n                return this._factor;\r\n            },\r\n\r\n            set: function (v) {\r\n                this._factor = v;\r\n            }\r\n        },\r\n\r\n        _radius: 52.0,\r\n        radius: {\r\n            get: function () {\r\n                return this._radius;\r\n            },\r\n\r\n            set: function (v) {\r\n                this._radius = v;\r\n            }\r\n        },\r\n\r\n        material: cc.Material,\r\n    },\r\n\r\n    onLoad() {\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        this.sprite.setMaterial(0, this.material);\r\n\r\n        this.update();\r\n    },\r\n\r\n    update() {\r\n        var frame = this.sprite.spriteFrame;\r\n        var texture = frame.getTexture();\r\n        var rect = frame.getRect();\r\n\r\n        if (texture != this._shaderTexture || !frame.getRect().equals(this._shaderFrame.getRect())) {\r\n            this._shaderTexture = texture;\r\n            this._shaderFrame = frame;\r\n\r\n            var material = this.sprite.getMaterial(0);\r\n            material.setProperty('textureSize', { x: this.node.width, y: this.node.height });\r\n            material.setProperty('factor', this.factor);\r\n            material.setProperty('radius', this.radius);\r\n\r\n            var uv_factor_1 = { x: rect.x / texture.width, y: rect.y / texture.height };\r\n            var uv_factor_2 = { x: rect.width / texture.width, y: rect.height / texture.height };\r\n\r\n            material.setProperty('uv_factor_1', uv_factor_1);\r\n            material.setProperty('uv_factor_2', uv_factor_2);\r\n        }\r\n    },\r\n});\r\n","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Helloworld extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    // @property\n    // text: string = 'hello';\n\n    start () {\n        // init logic\n        this.label.string = 'Open Cocos Tools';\n    }\n    openCocosTools() {\n        cc.director.loadScene('sceneTools')\n    }\n}\n","const {ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\n@menu('Common/LoadPrefab')\r\nclass ItemPrefab extends cc.Component {\r\n    @property({\r\n        type: cc.Prefab,\r\n        tooltip: '需要绑定的prefab'\r\n    })\r\n    prefab: cc.Prefab = null\r\n\r\n    @property({\r\n        type: cc.Node,\r\n        tooltip: '预制体实例化的父节点'\r\n    })\r\n    parentNode: cc.Node = null\r\n\r\n    @property({\r\n        tooltip: '是否自动加载'\r\n    })\r\n    autoLoad: Boolean = true\r\n\r\n    @property({\r\n        tooltip: '是否设为常驻节点'\r\n    })\r\n    isPersist: Boolean = false\r\n\r\n    onLoad () {\r\n        const {node, prefab, parentNode, autoLoad, isPersist} = this\r\n        \r\n        autoLoad && prefab && (cc.instantiate(prefab).parent = parentNode || node)\r\n        isPersist && cc.game.addPersistRootNode(node);\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nimport cocosTools from '../CocosTools'\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    editor: {\r\n    \trequireComponent: cc.Graphics,\r\n\t\texecuteInEditMode: true\r\n    }\r\n    @property({\r\n        type: cc.Label,\r\n        tooltip: '生成二维码的字符'\r\n    })\r\n    codeLabel: cc.Label = null\r\n\r\n    @property({\r\n        type: cc.Node,\r\n        tooltip: '二维码的父节点'\r\n    })\r\n    QRCodeNode: cc.Node = null\r\n\r\n    @property({\r\n        type: cc.Graphics,\r\n        tooltip: '生成二维码的字符'\r\n    })\r\n    graphics: cc.Graphics = null\r\n\r\n    @property(cc.Color)\r\n    backColor: cc.Color = cc.Color.WHITE\r\n\r\n    @property(cc.Color)\r\n    foreColor: cc.Color = cc.Color.BLACK\r\n\r\n    @property(cc.Integer)\r\n    margin = 0\r\n\r\n    start() {\r\n        this.createQRCode()\r\n    }\r\n    // 生成二维码\r\n    createQRCode() {\r\n        const codeText = this.codeLabel.string.trim()\r\n        if (!codeText) {\r\n            alert('\\u263b 莫得鸡，那来得蛋嘛 \\u263b')\r\n            return\r\n        }\r\n\t\tif (cc.sys.browserType === cc.sys.BROWSER_TYPE_IE || true) {\r\n            const codeNode = this.QRCodeNode || this.node\r\n            this.getQRCodeBase64(codeText, codeNode)\r\n\t\t\treturn\r\n        }\r\n        /**\r\n         * 以下方法在1.9.3版本除IE浏览器外，测试无问题，但是在2.1.2版本，无法显示，暂未定位到原因\r\n         */\r\n        const graphics = this.graphics || this.node.getComponent(cc.Graphics)\r\n        graphics.clear();\r\n        //背景色\r\n        graphics.fillColor = this.backColor;\r\n        let width = this.node.width;\r\n        graphics.fillRect(0, 0, width, width);\r\n        graphics.close();\r\n        //生成二维码数据\r\n        let qrcode = new QRCode(-1, 2);\r\n        qrcode.addData(codeText);\r\n        qrcode.make();\r\n        graphics.fillColor = this.foreColor;\r\n        let size = width - this.margin * 2;\r\n        let num = qrcode.getModuleCount();\r\n        \r\n        let tileW = size / num;\r\n        let tileH = size / num;\r\n        let w = Math.ceil(tileW);\r\n        let h = Math.ceil(tileH);\r\n        for (let row = 0; row < num; row++) {\r\n            for (let col = 0; col < num; col++) {\r\n                if (qrcode.isDark(row, col)) {\r\n                    graphics.fillRect(this.margin + col * tileW, size - tileH - Math.round(row * tileH) + this.margin, w, h);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @description 获取二维码图片\r\n     * @param url 生成的二维码的字符串\r\n     * @param node 生成后的二维码挂载的节点，默认不挂载\r\n     */\r\n    getQRCodeBase64(url, node = null) {\r\n        if (!url) return\r\n        const div = document.createElement('div')\r\n        new QRCodeWeb(div, url)\r\n        const img = div.children[1]\r\n        return new Promise(resolve=> {\r\n            const imgBase64 = div.children[0].toDataURL('image/png')\r\n            imgBase64 && resolve(imgBase64)\r\n            img.onload = () => {\r\n                if (!img.src) return\r\n                if (node) {\r\n                    const texture = new cc.Texture2D()\r\n                    texture.initWithElement(img)\r\n                    texture.handleLoadedTexture()\r\n                    const spriteFrame = new cc.SpriteFrame(texture)\r\n                    const sprite = node.getComponent(cc.Sprite) || node.addComponent(cc.Sprite)\r\n                    sprite.spriteFrame = spriteFrame\r\n                }\r\n                resolve(img.src)\r\n            }\r\n            imgBase64 && !img.src && (img.src= imgBase64)\r\n        })\r\n    }\r\n    // 保存二维码\r\n    saveQRCode() {\r\n        this.getQRCodeBase64(this.codeLabel.string.trim()).then(base64 => {\r\n            cocosTools.downloadImg(base64)\r\n        })\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nimport cocosTools from '../CocosTools'\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Node,\r\n        tooltip: '要保存为图片的节点'\r\n    })\r\n    savaNode: cc.Node = null\r\n\r\n    // web浏览器保存节点为图片\r\n    saveNodeImg() {\r\n        cocosTools.saveNodeImg(this.savaNode, 'mode.png')\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nclass TransitionHandler {\r\n    @property({\r\n        type: cc.Node,\r\n        tooltip: '过渡目标节点'\r\n    })\r\n    target: cc.Node = null\r\n\r\n    @property({\r\n        tooltip: '过渡持续时间，默认使用全局过渡时间0.5s'\r\n    })\r\n    duration = 0.5\r\n\r\n    @property({\r\n        tooltip: '初始X轴位置，默认当前节点X轴位置'\r\n    })\r\n    positionX = 0\r\n\r\n    @property({\r\n        tooltip: '初始Y轴位置，默认当前节点Y轴位置'\r\n    })\r\n    positionY = 0\r\n}\r\n\r\n@ccclass\r\nexport default class Transition extends cc.Component {\r\n    editor: {\r\n    \tmenu: 'Common/NodeTransition',\r\n        executionOrder: 1,\r\n        disallowMultiple: true\r\n    }\r\n\r\n    @property({\r\n        type: TransitionHandler,\r\n        tooltip: '需要过渡效果的节点及配置'\r\n    })\r\n    nodes: TransitionHandler[] = []\r\n\r\n    @property(cc.EditBox)\r\n    positionX: cc.EditBox = null\r\n\r\n    @property(cc.EditBox)\r\n    positionY: cc.EditBox = null\r\n\r\n    onEnable() {\r\n        this.runAction()\r\n    }\r\n    runAction() {\r\n        let nodes = this.nodes\r\n        interface node {\r\n            duration\r\n            positionX\r\n            positionY\r\n            target: {\r\n                x: Number\r\n                y: Number\r\n                active: null\r\n                getPosition: Function\r\n                getComponent: Function\r\n                runAction: Function\r\n            }\r\n        } \r\n        for (let i = 0, l = nodes.length; i < l; ++i) {\r\n            const {target, positionX, positionY, duration} = nodes[i] as node\r\n            if (!target || (!positionX && !positionY)) continue\r\n            if (!target.active) continue\r\n            const ve2 = target.getPosition()\r\n            const actionTo = cc.moveTo(duration, ve2)\r\n            const widget = target.getComponent(cc.Widget)\r\n            widget && (widget.enabled = false)\r\n            const restoreFn = cc.callFunc(() => {\r\n                widget && (widget.enabled = true)\r\n            })\r\n            positionX && (target.x = positionX)\r\n            positionY && (target.y = positionY)\r\n            setTimeout(() => { target.runAction(cc.sequence(actionTo, restoreFn)) }, 0)\r\n        }\r\n    }\r\n    /**\r\n     * 运行按钮\r\n     */\r\n    onClickRun() {\r\n        this.nodes.forEach(item => {\r\n            item.positionX = Number(this.positionX.string)\r\n            item.positionY = Number(this.positionY.string)\r\n        })\r\n        this.runAction()\r\n    }\r\n}\r\n"],"sourceRoot":"/source/","file":"project.js"}