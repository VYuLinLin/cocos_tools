{"version":3,"sources":["assets/Script/CocosTools.ts","assets/Script/Game.ts","assets/Script/Helloworld.ts","assets/Script/common/Transition.ts"],"names":["exports","default","tackPhoto","node","fileName","pp","parent","op","position","runScene","cc","director","getScene","nn","Node","addChild","x","width","y","height","p","renderTexture","RenderTexture","create","Texture2D","PIXEL_FORMAT_RGBA8888","gl","DEPTH24_STENCIL8_OES","setVisible","_sgNode","begin","visit","end","saveToFile","IMAGE_FORMAT_JPG","active","setTimeout","jsb","fileUtils","getWritablePath","sys","os","OS_ANDROID","reflection","callStaticMethod","OS_IOS","destroy","saveNodeImg","callback","initWithSize","texture","camera","addComponent","Camera","targetTexture","canvasEl_1","document","createElement","ctx","getContext","render","data","readPixels","removeComponent","rowBytes","row","srow","imageData","createImageData","start","i","putImageData","base64","toDataURL","this","downloadBase64","off","Director","EVENT_AFTER_DRAW","instantiate","_a","game","canvas","width_1","height_1","runScene_1","canvasNode_1","find","roomIndexs_1","canvasIndexs_1","children","map","roomNode","name","push","view","setCanvasSize","removeChild","on","bind","isBrowser","window","navigator","msSaveOrOpenBlob","arr","split","type","match","bstr","atob","n","length","u8arr","Uint8Array","blob","charCodeAt","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","aEl","evt","MouseEvent","bubbles","cancelable","download","target","href","body","appendChild","dispatchEvent","_decorator","ccclass","property","CocosTools_1","require","NewClass","_super","_this","apply","arguments","pageView","savaNode","__extends","prototype","setContentHeight","totalHeight","content","scrollToPage","event","index","goback","loadScene","__decorate","PageView","tooltip","Component","Helloworld","label","string","openCocosTools","Label","menu","TransitionHandler","duration","positionX","positionY","Float","Integer","nodes","onEnable","_loop_1","l","ve2","getPosition","actionTo","moveTo","widget","getComponent","Widget","enabled","restoreFn","callFunc","setPositionX","setPositionY","runAction","sequence"],"mappings":"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","sourcesContent":["\r\nexport default {\r\n    /**\r\n     * @description Native保存节点为图片\r\n     * @param {cc.Node} node 保存的节点\r\n     * @param {String} fileName 保存的图片名称\r\n     */\r\n    tackPhoto: function (node, fileName) {\r\n        var pp = node.parent\r\n        var op = node.position\r\n        var runScene = cc.director.getScene()\r\n        var nn = new cc.Node()\r\n        runScene.addChild(nn)\r\n        nn.x = node.width / 2\r\n        nn.y = node.height / 2\r\n        node.parent = runScene\r\n        node.position = cc.p(node.width / 2, node.height / 2)\r\n        var renderTexture = cc.RenderTexture.create(node.width, node.height, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES)\r\n        renderTexture.setVisible(false);\r\n        nn._sgNode.addChild(renderTexture)\r\n        renderTexture.begin()\r\n        runScene._sgNode.visit()\r\n        renderTexture.end()\r\n        renderTexture.saveToFile(fileName, cc.IMAGE_FORMAT_JPG)\r\n        node.active = false\r\n        setTimeout(function () {\r\n            node.parent = pp\r\n            node.position = op\r\n            node.active = true\r\n            fileName = jsb.fileUtils.getWritablePath() + fileName\r\n            if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"photoTo\", \"(Ljava/lang/String;)V\", fileName)\r\n            } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n                jsb.reflection.callStaticMethod(\"AppController\", \"photoTo:\", fileName)\r\n            }\r\n        }, 10)\r\n        nn.destroy()\r\n    },\r\n    /**\r\n     * @description web浏览器保存节点为图片\r\n     * @param {cc.Node} node 保存的节点\r\n     * @param {String} fileName 保存的图片名字\r\n     */\r\n    saveNodeImg(node, fileName) {\r\n        if (!(node instanceof cc.Node)) return\r\n        let callback = null\r\n\r\n        if (new cc.RenderTexture().initWithSize) {\r\n            // 2.x web截屏\r\n            let texture = new cc.RenderTexture()\r\n            texture.initWithSize(node.width, node.height)    \r\n    \r\n            const {width, height} = node\r\n            const camera =  node.addComponent(cc.Camera)\r\n            camera.targetTexture = texture\r\n            const canvasEl = document.createElement('canvas')\r\n            let ctx = canvasEl.getContext('2d')\r\n            canvasEl.width = width\r\n            canvasEl.height = height\r\n            camera.render(node)\r\n            let data = texture.readPixels()\r\n            node.removeComponent(camera)\r\n            let rowBytes = width * 4\r\n            for (let row = 0; row < height; row++) {\r\n                let srow = height - 1 - row\r\n                let imageData = ctx.createImageData(width, 1)\r\n                let start = srow * width * 4\r\n                for (let i = 0; i < rowBytes; i++) {\r\n                    imageData.data[i] = data[start+i]\r\n                }\r\n                ctx.putImageData(imageData, 0, row)\r\n            }\r\n            callback = function() {\r\n                const base64 = canvasEl.toDataURL()\r\n                this.downloadBase64(base64, fileName)\r\n                cc.director.off(cc.Director.EVENT_AFTER_DRAW)\r\n            }\r\n        } else {\r\n            // 2.x 版本以下，只在1.9.3测试无问题\r\n            node = cc.instantiate(node)\r\n            let {width, height} = cc.game.canvas\r\n            const runScene = cc.director.getScene()\r\n            const canvasNode = cc.find('Canvas')\r\n            const roomIndexs = []\r\n            const canvasIndexs = []\r\n            runScene.children.map((roomNode, i) => {\r\n                if (roomNode.name !== 'Canvas' && roomNode.active) {\r\n                    roomNode.active = false\r\n                    roomIndexs.push(i)\r\n                }\r\n            })\r\n            canvasNode.children.map((node, i) => {\r\n                node.active && (node.active = false, canvasIndexs.push(i))\r\n            })\r\n            cc.view.setCanvasSize(node.width, node.height)\r\n            canvasNode.width = node.width\r\n            canvasNode.addChild(node)\r\n            callback = function() {\r\n                const base64 = cc.game.canvas.toDataURL()\r\n                this.downloadBase64(base64, fileName)\r\n                cc.director.off(cc.Director.EVENT_AFTER_DRAW)\r\n                canvasNode.removeChild(node)\r\n                cc.view.setCanvasSize(width, height)\r\n                roomIndexs.map(i => { runScene.children[i].active = true })\r\n                canvasIndexs.map(i => { canvasNode.children[i].active = true })\r\n            }\r\n        }\r\n        \r\n        // 等渲染之后才能获取画布上的内容\r\n        cc.director.on(cc.Director.EVENT_AFTER_DRAW, callback.bind(this))\r\n    },\r\n    /**\r\n     * @description 浏览器下载图片，兼容ie\r\n     * @param {Base64} base64 图片的base64格式\r\n     * @param {String} fileName 图片名称\r\n     */\r\n    downloadBase64(base64, fileName = 'QRcode.png') {\r\n        if (!cc.sys.isBrowser) return\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            // 支持msSaveOrOpenBlob方法（也就是使用IE浏览器的时候）\r\n            const arr = base64.split(',')\r\n            const type = arr[0].match(/:(.*?);/)[1]\r\n            const bstr = atob(arr[1])\r\n            let n = bstr.length\r\n            const u8arr = new Uint8Array(n)\r\n            let blob\r\n            while (n--) u8arr[n] = bstr.charCodeAt(n)\r\n            try {\r\n                blob = new Blob([u8arr, {type}])\r\n            } catch (e) {\r\n                // 兼容旧版IE，如IE11\r\n                window.BlobBuilder = window.BlobBuilder ||\r\n                                     window.WebKitBlobBuilder ||\r\n                                     window.MozBlobBuilder ||\r\n                                     window.MSBlobBuilder;\r\n                if (window.BlobBuilder) {\r\n                    var bb = new BlobBuilder();\r\n                    bb.append(u8arr);\r\n                    blob = bb.getBlob(type);\r\n                }\r\n            }\r\n            window.navigator.msSaveOrOpenBlob(blob, fileName)\r\n        } else {\r\n            const aEl = document.createElement('a')\r\n            const evt = new MouseEvent('click', {\r\n                'view': window,\r\n                'bubbles': true,\r\n                'cancelable': true\r\n            });\r\n            aEl.download = fileName\r\n            aEl.target = '_blank' // safari浏览器在新标签页显示\r\n            aEl.href = base64\r\n            document.body.appendChild(aEl)\r\n            aEl.dispatchEvent(evt) // 兼容火狐浏览器\r\n            document.body.removeChild(aEl)\r\n        }\r\n    },\r\n}","const {ccclass, property} = cc._decorator;\r\nimport cocosTools from './CocosTools'\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.PageView)\r\n    pageView: cc.PageView = null;\r\n\r\n    @property({\r\n        type: cc.Node,\r\n        tooltip: '要保存为图片的节点'\r\n    })\r\n    savaNode: cc.Node = null;\r\n\r\n    start () {\r\n        this.setContentHeight()\r\n    }\r\n    // 设置内容的高度\r\n    setContentHeight() {\r\n        let totalHeight = 0\r\n        if (!this.pageView) return\r\n        this.pageView.content.children.map(node => {\r\n            totalHeight += node.height\r\n        })\r\n        this.pageView.content.height = totalHeight\r\n    }\r\n    // 滚动内容区到指定页\r\n    scrollToPage(event = null, index = 0) {\r\n        this.pageView && this.pageView.scrollToPage(index)\r\n    }\r\n\r\n    goback() {\r\n        cc.director.loadScene('helloworld')\r\n    }\r\n    // web浏览器保存节点为图片\r\n    saveNodeImg() {\r\n        cocosTools.saveNodeImg(this.savaNode, 'mode.png')\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Helloworld extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    // @property\n    // text: string = 'hello';\n\n    start () {\n        // init logic\n        this.label.string = 'Open Cocos Tools';\n    }\n    openCocosTools() {\n        cc.director.loadScene('sceneTools')\n    }\n}\n","const {ccclass, property, menu} = cc._decorator;\r\n// 单个节点过渡效果\r\nclass TransitionHandler extends cc.Component {\r\n    name: 'cc.TransitionHandler'\r\n\r\n        @property({\r\n            type: cc.Node,\r\n            tooltip: '过渡目标节点'\r\n        })\r\n        target: cc.Node = null\r\n\r\n        @property({\r\n            type: cc.Float,\r\n            tooltip: '过渡持续时间，默认过渡时间0.5s'\r\n        })\r\n        duration: cc.Float = 0.5\r\n\r\n        @property({\r\n            type: cc.Integer,\r\n            tooltip: '初始X轴位置，默认当前节点X轴位置'\r\n        })\r\n        positionX: cc.Integer = 0\r\n        \r\n        @property({\r\n            type: cc.Integer,\r\n            tooltip: '初始Y轴位置，默认当前节点Y轴位置'\r\n        })\r\n        positionY: cc.Integer = 0\r\n}\r\n\r\n@ccclass\r\n@menu('Common/Transition')\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property({\r\n        type: TransitionHandler,\r\n        tooltip: '需要过渡效果的节点及配置'\r\n    })\r\n    nodes: TransitionHandler = []\r\n\r\n    onEnable() {\r\n        const nodes = this.nodes\r\n        for (let i = 0, l = nodes.length; i < l; ++i) {\r\n            const {target, positionX, positionY, duration} = nodes[i]\r\n            if (!target || (!positionX && !positionY)) continue\r\n            if (!target.active) continue\r\n            const ve2 = target.getPosition()\r\n            const actionTo = cc.moveTo(duration, ve2)\r\n            const widget = target.getComponent(cc.Widget)\r\n            widget && (widget.enabled = false)\r\n            const restoreFn = cc.callFunc(() => {\r\n                widget && (widget.enabled = true)\r\n            })\r\n            positionX && target.setPositionX(positionX)\r\n            positionY && target.setPositionY(positionY)\r\n            setTimeout(() => { target.runAction(cc.sequence(actionTo, restoreFn)) }, 0)\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/","file":"project.js"}